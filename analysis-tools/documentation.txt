Analysis Tools Documentation 
****************************

This directory contains (or will contain) a collection of tools for analyzing, 
formatting, and visualizing antenna pattern measurments.



Summary of Tools
****************

plotPoincare.m
*   Matlab script to plot orthogonal field measurments on a Poincare sphere to
*   visualize polarization.

findBeamwidth.m
*	Matlab script to find the desired beamwidth of an antenna pattern.





Detailed Listing
****************

plotPoincare.m
*   Matlab function
*   plotPoincare(MagX, MagY, DeltaPhase [, OpaqueSphere[, ShowLabels]])
*   
*   Plots a point or vector of points on a Poincare sphere for
*   easy visualization of the points' polarization.
*   
*   X and Y must be two perpendicular measurements of the field, with MagX
*   and MagY being the fields' magnitudes and DeltaPhase being the
*   difference in their phases in degrees (PhaseY - PhaseX).
*
*   OpaqueSphere is an optional argument which determines if the sphere is
*   opaque (points on the back are hidden) or transparent (see-through wire
*   frame) If not specified, it defaults to false (transparent).
*   
*   ShowLabels is an optional argument which sets whether or not to include
*   text labels on the sphere denoting six special case polarizations:
*   left- and right-handed circular; vertical, horizontal, and +/-45
*   degree (slant) linear. If not specified, it defaults to true.


findBeamwidth.m
*	Matlab function
*	[beamwidth, topIndex, botIndex] = findBeamwidth(beamwidthDepth_dB, data_dB)
*
*   beamwidth = Width of beam, in number of indicies between the two bounds
*
*   topIndex = Index into data_dB of location of right-hand (larger angle)
*       bound of the beam
*
*   botIndex = Index into data_dB of location of left-hand (smaller angle)
*       bound of the beam

*   beamwidthDepth_dB = Decrease between pattern max and bounds of
*       beam, e.g. set this to +3 for the half-power (-3dB) beamwidth if
*       data_dB is a power pattern.
*
*   data_dB = Antenna pattern data in dB. Note that whether this is a power
*       or field pattern will influence what value you want to use with
*       beamwidthDepth_dB. Data points are assumed to be given in strictly 
*       increasing or strictly decreasing order by angle.
